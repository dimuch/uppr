# This is a basic workflow to help you get started with Actions

name: uppr-main-deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  NODE_ENV: ${{secrets.NODE_ENV}}
  ITP_MYSQL_USER: ${{secrets.ITP_MYSQL_USER}}
  ITP_MYSQL_PASSWORD: ${{secrets.ITP_MYSQL_PASSWORD}}
  ITP_MYSQL_DATABASE: ${{secrets.ITP_MYSQL_DATABASE}}
  ITP_MYSQL_URL: ${{secrets.ITP_MYSQL_URL}}
  ITP_MYSQL_PORT: ${{secrets.ITP_MYSQL_PORT}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install nodejs, yarn
        run: | 
          node -v
          yarn -v
          sudo curl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh
          sudo bash nodesource_setup.sh
          sudo apt install -y nodejs
          sudo apt-get install gcc g++ make
          curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | sudo tee /usr/share/keyrings/yarnkey.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt-get update && sudo apt-get install yarn

      - name: Create separate directory
        run: mkdir uppr_deploy && cd uppr_deploy
      - name: Cloning repo
        run: git clone https://github.com/dimuch/uppr.git
      - name: Install dependencies
        run: cd uppr && sudo yarn install && sudo yarn add cross-env
      - name: Build sources
        run: sudo yarn build
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Copy build to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            pwd
            ls -al
            sudo scp -r .next ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{secrets.DEPLOY_DIRECTORY}}
